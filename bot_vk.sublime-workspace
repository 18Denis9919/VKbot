{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ro",
				"row_monday"
			],
			[
				"col",
				"col_gropu"
			],
			[
				"row",
				"row_group"
			],
			[
				"c",
				"colidx"
			],
			[
				"no",
				"notification"
			],
			[
				"get_",
				"get_weekday"
			],
			[
				"mes",
				"mes_auto_info"
			],
			[
				"ex",
				"execute"
			],
			[
				"__",
				"__name__"
			],
			[
				"for",
				"format"
			],
			[
				"tea",
				"teacher_list"
			],
			[
				"me",
				"message"
			],
			[
				"ge",
				"get_group"
			],
			[
				"gro",
				"group"
			],
			[
				"e",
				"event"
			],
			[
				"v",
				"vk_id"
			],
			[
				"ma",
				"margin-right\tproperty"
			],
			[
				"wi",
				"width\tproperty"
			],
			[
				"s",
				"style\tAttr"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"fo",
				"font-size\tproperty"
			],
			[
				"gr",
				"group"
			],
			[
				"re",
				"records"
			],
			[
				"us",
				"user_id_db"
			],
			[
				"na",
				"__name__"
			],
			[
				"mess",
				"message_set"
			],
			[
				"com",
				"command"
			],
			[
				"g",
				"group"
			],
			[
				"grop",
				"group_id"
			],
			[
				"de",
				"delete_user"
			],
			[
				"user",
				"user_id"
			],
			[
				"vk",
				"vk_id"
			],
			[
				"use",
				"user_id"
			],
			[
				"uer",
				"user_id"
			],
			[
				"q",
				"queryset"
			],
			[
				"data",
				"data_now"
			],
			[
				"req",
				"req"
			],
			[
				"da",
				"data"
			],
			[
				"we",
				"weekday"
			],
			[
				"fr",
				"friday"
			],
			[
				"te",
				"tuesday"
			],
			[
				"time",
				"time1"
			],
			[
				"tim",
				"time"
			],
			[
				"p",
				"pidr"
			],
			[
				"id",
				"id_db"
			],
			[
				"f",
				"form_class"
			],
			[
				"fi",
				"file_returned"
			],
			[
				"n",
				"node_id"
			],
			[
				"node_d",
				"nodes_dict"
			],
			[
				"obj",
				"objects"
			],
			[
				"_",
				"__init__"
			],
			[
				"Gr",
				"Group"
			],
			[
				"db",
				"db_name"
			],
			[
				"nod",
				"nodes_dict"
			],
			[
				"ch",
				"child_text"
			],
			[
				"o",
				"object"
			],
			[
				"pare",
				"parent_id"
			],
			[
				"im",
				"import"
			],
			[
				"gra",
				"graph_id"
			],
			[
				"node",
				"nodes_list"
			],
			[
				"find",
				"findall"
			],
			[
				"list",
				"list_xml"
			],
			[
				"lis",
				"list_xml"
			],
			[
				"x",
				"x"
			],
			[
				"a",
				"attrib"
			],
			[
				"test",
				"test.xml"
			],
			[
				"get",
				"getroot"
			],
			[
				"pa",
				"path_to_XML"
			],
			[
				"file",
				"files_list"
			],
			[
				"fa",
				"false"
			],
			[
				"profile",
				"profiles"
			],
			[
				"send",
				"send_activation_email"
			],
			[
				"ac",
				"activated"
			],
			[
				"he",
				"HOST_SCHEME"
			],
			[
				"in",
				"instance_slug"
			],
			[
				"su",
				"success_url"
			],
			[
				"S",
				"SelectDateWidget"
			],
			[
				"remove",
				"removeAttr\t.removeAttr()"
			],
			[
				"slid",
				"slideToggle\t.slideToggle()"
			],
			[
				"fade",
				"fadeIn\t.fadeIn()"
			],
			[
				"co",
				"context"
			],
			[
				"I",
				"ToyInlineFormSet"
			],
			[
				"froms",
				"formset"
			],
			[
				"tep",
				"templates"
			],
			[
				"usr",
				"username"
			],
			[
				"ToyCre",
				"ToyCreateForm"
			],
			[
				"T",
				"ToyImageInline"
			],
			[
				"To",
				"Toy"
			],
			[
				"Toy",
				"ToyImage"
			],
			[
				"b",
				"build"
			],
			[
				"wal",
				"WalletManager"
			],
			[
				"Bed",
				"BedManager"
			],
			[
				"Pr",
				"ProfileEditForm"
			],
			[
				"bi",
				"birth_day"
			],
			[
				"Us",
				"UserManager"
			],
			[
				"activa",
				"activation_key"
			],
			[
				"av",
				"activated"
			],
			[
				"P",
				"Profile"
			],
			[
				"De",
				"DetailView"
			],
			[
				"pre",
				"tl_pre_save_receiver"
			],
			[
				"model",
				"models"
			],
			[
				"def",
				"default"
			],
			[
				"w",
				"width_field"
			],
			[
				"tra",
				"translate"
			],
			[
				"tan",
				"translatedText"
			],
			[
				"ToyC",
				"ToyCreateForm"
			],
			[
				"Ti",
				"ToyDetailView"
			],
			[
				"ta",
				"target\tAttr"
			],
			[
				"cu",
				"currentSlideIndex"
			],
			[
				"less",
				"lessImport"
			],
			[
				"tr",
				"true"
			],
			[
				"app",
				"app/"
			],
			[
				"lib",
				"libs.min.css"
			],
			[
				"fun",
				"function"
			],
			[
				"jquer",
				"jquery.magnific-popup.min.js"
			],
			[
				"bro",
				"browserSync"
			],
			[
				"br",
				"browserSync"
			],
			[
				"r",
				"rgba()"
			],
			[
				"tras",
				"transition-property"
			],
			[
				"fon",
				"font"
			],
			[
				"scr",
				"scrollTop\t.scrollTop()"
			],
			[
				"win",
				"winPos"
			],
			[
				"rg",
				"rgba()"
			],
			[
				"pad",
				"padding"
			],
			[
				"next",
				"nextImg"
			],
			[
				"cur",
				"currentImg"
			],
			[
				"curr",
				"currentImgIndex"
			],
			[
				"wni",
				"winPos"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bot.py",
			"settings":
			{
				"buffer_size": 6005,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "new_bot.py",
			"settings":
			{
				"buffer_size": 14161,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_with_excel.py",
			"settings":
			{
				"buffer_size": 1088,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "## -*- coding: utf-8 -*-\nfrom bot import VKBot\nfrom random import randint\nfrom importlib import reload\nimport pymysql\nimport datetime\nimport re\nimport postgresql\nimport psycopg2\nimport psycopg2.extensions\npsycopg2.extensions.register_type(psycopg2.extensions.UNICODE)\npsycopg2.extensions.register_type(psycopg2.extensions.UNICODEARRAY)\n\nconn = psycopg2.connect(\"host='ec2-50-19-127-158.compute-1.amazonaws.com' dbname='da3vvps6qv9fpc' user='cgbvbzntdxveul' password='f5fdf70c6d5fe8fed9dc9e0ff1430ea6e99f18ef27896797401db2f6b5f7f47e'\")\ncur = conn.cursor()\n\n\ndef get_group(vk_id):\n\treq = cur.execute(\"\"\"SELECT * FROM users WHERE vk_id = '{0}'\"\"\".format(str(vk_id)))\n\tgroup = 0\n\tfor el in cur:\n\t\tgroup = el[2]\n\treturn group\n\n\ndef get_week(data):\n\ttime = data.isocalendar()[1]\n\ttime1 = datetime.datetime(2018, 9, 1).isocalendar()[1]\n\tweek = time - time1\n\treturn week\n\n\ndef create_message(request, data):\n\tmes = ''\n\tfor row in request:\n\t\tif str(get_week(data)) in row[4]:\n\t\t\tmes = mes + str(row[0])+' пара ('+ str(row[1]) + ', с ' + str(row[2]) + ' до ' + str(row[3]) + '): \\n' + str(row[4]) + ', ' + str(row[5])+'\\n\\n'\n\t\telif not bool(re.search(r'\\d', row[4])):\n\t\t\tmes = mes + str(row[0])+' пара ('+ str(row[1]) + ', с ' + str(row[2]) + ' до ' + str(row[3]) + '): \\n' + str(row[4]) + ', ' + str(row[5])+'\\n\\n'\n\t\n\tif mes=='':\n\t\tmes = 'Занятий нет.\\n\\n'\n\n\treturn mes\n\n\ndef monday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"\"\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ПОНЕДЕЛЬНИК' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\"\"\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"\"\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ПОНЕДЕЛЬНИК' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\"\"\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на понедельник ' + mes_date + ':\\n\\n' + create_message(cur, data)\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\n\n\n\ndef tuesday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ВТОРНИК' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ВТОРНИК' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на вторник ' + mes_date + ':\\n\\n' + create_message(cur, data)\t\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\n\ndef wednesday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='СРЕДА' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='СРЕДА' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на среду ' + mes_date + ':\\n\\n' + create_message(cur, data)\t\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\t\n\ndef thursday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ЧЕТВЕРГ' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ЧЕТВЕРГ' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на четверг ' + mes_date + ':\\n\\n' + create_message(cur, data)\t\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\n\ndef friday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ПЯТНИЦА' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='ПЯТНИЦА' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на пятницу ' + mes_date + ':\\n\\n' + create_message(cur, data)\t\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\n\ndef saturday(data, vk_id, mes_date=''):\n\tif get_group(vk_id)!=0:\n\t\tif get_week(data)%2!=0:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='СУББОТА' AND Subject IS NOT NULL AND WEEK = 'I' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\telse:\n\t\t\tcur.execute(\"SELECT Number_lesson, Class, Start_lesson, End_lesson, Subject, Type_lesson  FROM time_table WHERE Day_of_week='СУББОТА' AND Subject IS NOT NULL AND WEEK = 'II' AND Group_ID = '{0}'\".format(get_group(vk_id)))\n\t\tmessage = 'Пары на субботу ' + mes_date + ':\\n\\n' + create_message(cur, data)\t\n\telse:\n\t\tmessage = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\t\n\treturn message\n\ndef send_monday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message= monday(datetime.datetime.utcnow(), message.user_id))\n\ndef send_tuesday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message=tuesday(datetime.datetime.utcnow(), message.user_id))\n\ndef send_wednesday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message= wednesday(datetime.datetime.utcnow(), message.user_id))\n\ndef send_thursday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message= thursday(datetime.datetime.utcnow(), message.user_id))\n\ndef send_friday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message= friday(datetime.datetime.utcnow(), message.user_id))\n\ndef send_saturday(message, vk):\n\tvk.messages.send(user_id=message.user_id, message= saturday(datetime.datetime.utcnow(), message.user_id))\n\n\ndef get_weekday(day, mes_date, vk_id):\n\tif day.weekday()==0:\n\t\treturn monday(day, vk_id, mes_date)\n\telif day.weekday()==1:\n\t\treturn tuesday(day, vk_id, mes_date)\n\telif day.weekday()==2:\n\t\treturn wednesday(day, vk_id, mes_date)\n\telif day.weekday()==3:\n\t\treturn thursday(day, vk_id, mes_date)\n\telif day.weekday()==4:\n\t\treturn friday(day, vk_id, mes_date)\n\telif day.weekday()==5:\n\t\treturn saturday(day, vk_id, mes_date)\n\telse:\n\t\tmes_sun = 'В воскресенье выходной день!'\n\t\treturn mes_sun\n\ndef on_date(message, vk, date):\n\tmes_date = '(' + str(date.day) + '.' + str(date.month) + ')'\n\tvk.messages.send(user_id=message.user_id, message=get_weekday(date, mes_date,message.user_id))\n\ndef today(message, vk):\n\tmes_date = '(' + str(datetime.datetime.today().day) + '.' + str(datetime.datetime.today().month) + ')'\n\tvk.messages.send(user_id=message.user_id, message=get_weekday(datetime.datetime.today(), mes_date, message.user_id))\n\ndef today_auto(vk_id, vk):\n\tmes_auto = 'Привет хочу напомнить пары на сегодня:\\n\\n'\n\tmes_auto_info = 'Чтобы отключить уведомления, напиши мне \"уведомления\".'\n\tmes_date = '(' + str(datetime.datetime.today().day) + '.' + str(datetime.datetime.today().month) + ')'\n\tvk.messages.send(user_id=vk_id, message=mes_auto+get_weekday(datetime.datetime.today(), mes_date, vk_id)+mes_auto_info)\n\ndef tomorow(message, vk):\n\tdate = datetime.datetime.today()+datetime.timedelta(days=1)\n\tmes_date = '(' + str(date.day) + '.' + str(date.month) + ')'\n\tvk.messages.send(user_id=message.user_id, message=get_weekday(date, mes_date, message.user_id))\n\ndef for_week(message, vk):\n\tif get_group(message.user_id)!=0:\n\t\tdata = datetime.datetime.today()\n\t\tmes_week = 'Пары на неделю:\\n_________________________\\n\\n'\n\t\tfor i in range(7):\n\t\t\tmes_date = '(' + str(data.day) + '.' + str(data.month) + ')'\n\t\t\tif get_weekday(data, mes_date, message.user_id)!='В воскресенье выходной день!':\n\t\t\t\tmes_week += get_weekday(data, mes_date, message.user_id)  + '_________________________\\n\\n'\n\t\t\tdata = data + datetime.timedelta(days=1) \n\telse:\n\t\tmes_date = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\n\tvk.messages.send(user_id=message.user_id, message=mes_week)\n\n\ndef week(message, vk):\n\tif get_group(message.user_id)!=0:\n\t\tnum_week = str(get_week(datetime.datetime.utcnow()))\n\telse:\n\t\tnum_week = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\n\tvk.messages.send(user_id=message.user_id, message='Сейчас ' + num_week + ' неделя.')\n\ndef teachers(message, vk):\n\tif get_group(message.user_id)!=0:\n\t\treq = cur.execute(\"SELECT DISTINCT Teachers FROM time_table WHERE Group_ID = '{0}' AND Teachers IS NOT NULL\".format(get_group(message.user_id)))\n\t\tteacher_list = ''\n\t\tfor row in cur:\n\t\t\tteacher_list += row[0] + '\\n'\n\telse:\n\t\tteacher_list = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\n\tvk.messages.send(user_id=message.user_id, message=teacher_list)\n\n\n\ndef list_comand(message, vk):\n\tif get_group(message.user_id)!=0:\n\t\tlist_message = '''Вот что я умею:\n\t\t\t- Выводить расписание на определенный день недели\n\t\t\t- Выводить расписание на сегодня \n\t\t\t- Выводить расписание на завтра\n\t\t\t- Выводить расписание на всю неделю\n\t\t\t- Выводить расписание на определенную дату\n\t\t\t- Выводить номер недели\n\t\t\t- Выводить список преподавателей\n\t\t\t________________________________________________\n\n\t\t\tДля того чтобы посмотореть расписание другой группы напиши мне \"Сменить\"!\n\t\t'''\n\telse:\n\t\tlist_message = 'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17'\n\tvk.messages.send(user_id=message.user_id, message=list_message)\n\ndef delete_user(message, vk):\n\tif get_group(message.user_id)!=0:\n\t\tvk_id = message.user_id\n\t\ttry:\n\t\t\tcur.execute(\"\"\"DELETE FROM users WHERE vk_id = '{0}'\"\"\".format(str(message.user_id)))\n\t\t\tconn.commit()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Смена группы произошла успешно!')\n\t\t\thello(message, vk)\n\t\texcept:\t\n\t\t\tconn.rollback()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Упс, что то пошло не так!')\n\telse:\n\t\tvk.messages.send(user_id=message.user_id, message=u'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17')\n\ndef notifications(message, vk):\t\n\tif get_group(message.user_id)!=0:\n\t\t# notification = 0\n\t\tcur.execute(u\"\"\"SELECT notification, group_id FROM users WHERE vk_id='{0}'\"\"\".format(str(message.user_id)))\n\t\tfor el in cur:\n\t\t\tnotification = el[0]\n\t\tif notification=='no':\n\t\t\tcur.execute(u\"\"\"UPDATE users SET notification='yes' WHERE vk_id='{0}'\"\"\".format(str(message.user_id)))\n\t\t\tconn.commit()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Теперь тебе будет приходить уведомление о парах в 6:45 с понедельника по субботу!\\n Чтобы отключить уведомление напиши мне \"уведомление\".')\n\t\telse:\n\t\t\tcur.execute(u\"\"\"UPDATE users SET notification='no' WHERE vk_id='{0}'\"\"\".format(str(message.user_id)))\n\t\t\tconn.commit()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Теперь тебе не будет приходить уведомление о парах утром! Чтобы включть уведомление напиши мне \"уведомление\"')\n\telse:\n\t\tvk.messages.send(user_id=message.user_id, message=u'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17')\n\n\n\ndef start(message, vk):\n\tvk_id = message.user_id\n\tgroup = message.text.upper()\n\tif get_group(vk_id)==0:\n\t\ttry:\n\t\t\tcur.execute(u\"\"\"INSERT INTO users (vk_id, group_id, notifications) VALUES ('{0}', '{1}', 'no') ON CONFLICT DO NOTHING\"\"\".format(str(vk_id), group))\n\t\t\tconn.commit()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Я добавил тебя в базу, можешь приступать к работе!')\n\t\t\tlist_comand(message, vk)\n\t\texcept:\t\n\t\t\tconn.rollback()\n\t\t\tvk.messages.send(user_id=message.user_id, message=u'Упс, что то пошло не так!')\n\telse:\n\t\tvk.messages.send(user_id=message.user_id, message=u'Ты уже есть в базе! Твоя группа: {0}'.format(get_group(vk_id)))\n\ndef hello(message, vk):\n\tif get_group(message.user_id)==0:\n\t\tvk.messages.send(user_id=message.user_id, message=u'Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\nБББО-01-17 \\nБББО-02-17 ')\n\telse:\n\t\tvk.messages.send(user_id=message.user_id, message=u'Ну привет, чувак из {0}'.format(get_group(message.user_id)))\n\n\nif __name__ == '__main__':\n\tbot = VKBot(token='ad2782d4222562577747d80a4e616f6e8f9d566dfe73ca2e67656b3e2537e57c770fbce7bcc61073d86b5')\t\n\twhile True:\n\t\t# if datetime.datetime.now().strftime('%H:%M:%S')=='6:45:00':\n\t\tif datetime.datetime.now().strftime('%H:%M')=='10:55' and datetime.datetime.now().weekday()!=6:\n\t\t\tcur.execute(u\"\"\"SELECT vk_id FROM users WHERE notification='yes'\"\"\")\n\t\t\tmes_date = ' '\n\t\t\tfor el in cur:\n\t\t\t\t# if 'Занятий нет.' not in get_weekday(datetime.datetime.today(), mes_date, el[0]):\n\t\t\t\ttoday_auto(int(el[0]), bot.vk)\n\t\tqueryset = [\n\t\t[[u\"Понедельник\", \"пн\", \"Пн\",\"понедельник\",], send_monday],\n\t\t[[u\"Вторник\", \"вт\", \"Вт\",\"вторник\",], send_tuesday],\n\t\t[[u\"Среда\", \"ср\", \"Ср\",\"среда\", \"среду\", \"Среду\",], send_wednesday],\n\t\t[[u\"Четверг\", \"чт\", \"Чт\",\"четверг\",], send_thursday],\n\t\t[[u\"Пятница\", \"пт\", \"Пт\",\"пятницу\", \"пятница\", \"Пятинцу\",], send_friday],\n\t\t[[u\"Суббота\", \"суб\", \"Сб\",\"суббота\", \"Субботу\", \"субботу\", \"сб\",], send_saturday],\n\t\t[[u\"Сегодня\", \"сегодня\",], today],\n\t\t[[u\"Завтра\", \"завтра\"], tomorow],\n\t\t[[u\"Неделю\", \"неделю\"], for_week],\n\t\t[[u\"Сменить\",], delete_user],\n\t\t[[u\"уведомление\", \"уведомления\",], notifications],\n\t\t[[u\"Неделя\", \"неделя\", \"нед\"], week],\n\t\t[[u\"преподы\",], teachers],\n\t\t[[u\"info\",\"Инфо\",\"инфо\",\"команды\", \"Комнады\"], list_comand],\n\t\t[[u''], on_date],\n\t\t[[u'Привет',], hello],\n\t\t[[u'бббо-02-17', 'бббо-01-17'], start]\n\t\t]\n\t\tbot.run(query=queryset)\n\tcur.close()\n\tconn.close()\n\n\n",
			"file": "example.py",
			"file_size": 16924,
			"file_write_time": 131867650984456229,
			"settings":
			{
				"buffer_size": 14547,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Procfile",
			"settings":
			{
				"buffer_size": 26,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "CREATE TABLE users (\n    ID int NOT NULL AUTO_INCREMENT,\n    vk_id varchar(30) NOT NULL,\n    group_id varchar(10) NOT NULL,\n    PRIMARY KEY (ID)\n);\n    \npsql -h ['ec2-50-19-127-158.compute-1.amazonaws.com'] -U ['cgbvbzntdxveul'] ['da3vvps6qv9fpc']\npsql -h ec2-50-19-127-158.compute-1.amazonaws.com -U cgbvbzntdxveul da3vvps6qv9fpc\nf5fdf70c6d5fe8fed9dc9e0ff1430ea6e99f18ef27896797401db2f6b5f7f47e\n\nCREATE TABLE users(\n    ID SERIAL PRIMARY KEY,\n    vk_id varchar(30) NOT NULL,\n    group_id VARCHAR(10) NOT NULL   \n);\n\nCREATE TABLE IF NOT EXISTS time_table(\n    Day_of_week VARCHAR(12),\n    Number_lesson INT,\n    Start_lesson VARCHAR(5),\n    End_lesson VARCHAR(5),\n    Week VARCHAR(2),\n    Subject VARCHAR(41),\n    Type_lesson VARCHAR(3),\n    Teachers VARCHAR(32),\n    Class VARCHAR(11),\n    Group_ID VARCHAR(10)\n);\n\n\nCREATE TABLE IF NOT EXISTS time_table(\n    Day_of_week VARCHAR(12) CHARACTER SET utf8,\n    Number_lesson INT,\n    Start_lesson VARCHAR(5) CHARACTER SET utf8,\n    End_lesson VARCHAR(5) CHARACTER SET utf8,\n    Week VARCHAR(2) CHARACTER SET utf8,\n    Subject VARCHAR(41) CHARACTER SET utf8,\n    Type_lesson VARCHAR(3) CHARACTER SET utf8,\n    Teachers VARCHAR(32) CHARACTER SET utf8,\n    Class VARCHAR(11) CHARACTER SET utf8,\n    Group_ID VARCHAR(10) CHARACTER SET utf8\n);\n\nINSERT INTO users (vk_id, group_id) VALUES ('1', 'БББО-01-17');\nINSERT INTO time_table VALUES ('ПОНЕДЕЛЬНИК',1,'9-00','10-30','I','Иностранный язык','пр',NULL,'каф','BBBO-02-17');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nINSERT INTO time_table VALUES\n    ('ПОНЕДЕЛЬНИК',1,'9-00','10-30','I','Иностранный язык','пр',NULL,'каф','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',1,'9-00','10-30','II','Иностранный язык','пр',NULL,'каф','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',2,'10-40','12-10','I','Математический анализ','лек','Пономарев А.В.','379','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',2,'10-40','12-10','II','Математический анализ','лек','Пономарев А.В.','379','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',3,'13-00','14-30','I','Организация ЭВМ и вычислительных систем','лек','Никольский А.Н.','273','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',3,'13-00','14-30','II','Организация ЭВМ и вычислительных систем','лек','Никольский А.Н.','273','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',4,'14-40','16-10','I','Математическая логика и теория алгоритмов','пр','Мацнев А.П.','232','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',4,'14-40','16-10','II','Математическая логика и теория алгоритмов','пр','Мацнев А.П.','232','БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',5,'16-20','17-50','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПОНЕДЕЛЬНИК',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ВТОРНИК',1,'9-00','10-30','I','Организация ЭВМ и ВС','пр','Никольский А.Н.','257','БББО-02-17'),\n    ('ВТОРНИК',1,'9-00','10-30','II','Языки программирования','лек','Лесько С.А.','265','БББО-02-17'),\n    ('ВТОРНИК',2,'10-40','12-10','I','Организация ЭВМ и ВС','пр','Никольский А.Н.','257','БББО-02-17'),\n    ('ВТОРНИК',2,'10-40','12-10','II','Языки программирования','лек','Лесько С.А.','265','БББО-02-17'),\n    ('ВТОРНИК',3,'13-00','14-30','I','Математическая логика и теория алгоритмов','лек','Мацнев А.П.','257','БББО-02-17'),\n    ('ВТОРНИК',3,'13-00','14-30','II','Языки программирования','пр','Русаков А,М.','429','БББО-02-17'),\n    ('ВТОРНИК',4,'14-40','16-10','I','Математический анализ','пр','Пономарев А.В.','328','БББО-02-17'),\n    ('ВТОРНИК',4,'14-40','16-10','II','Математический анализ','пр','Пономарев А.В.','328','БББО-02-17'),\n    ('ВТОРНИК',5,'16-20','17-50','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ВТОРНИК',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ВТОРНИК',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ВТОРНИК',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',1,'9-00','10-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',1,'9-00','10-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',2,'10-40','12-10','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',2,'10-40','12-10','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',3,'13-00','14-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',3,'13-00','14-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',4,'14-40','16-10','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',4,'14-40','16-10','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',5,'16-20','17-50','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СРЕДА',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ЧЕТВЕРГ',1,'9-00','10-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ЧЕТВЕРГ',1,'9-00','10-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ЧЕТВЕРГ',2,'10-40','12-10','I','Физическая культура и спорт','пр',NULL,'ФОК','БББО-02-17'),\n    ('ЧЕТВЕРГ',2,'10-40','12-10','II','Физическая культура и спорт','пр',NULL,'ФОК','БББО-02-17'),\n    ('ЧЕТВЕРГ',3,'13-00','14-30','I','Электротехника','лек','Филинов В.В.','441','БББО-02-17'),\n    ('ЧЕТВЕРГ',3,'13-00','14-30','II','Электротехника','лек','Филинов В.В.','441','БББО-02-17'),\n    ('ЧЕТВЕРГ',4,'14-40','16-10','I','Информационные технологии','пр','Володин','251а','БББО-02-17'),\n    ('ЧЕТВЕРГ',4,'14-40','16-10','II','Документоведение','пр','Головченкр Д.','188.1','БББО-02-17'),\n    ('ЧЕТВЕРГ',5,'16-20','17-50','I','Информационные технологии','лр','Володин','251а','БББО-02-17'),\n    ('ЧЕТВЕРГ',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ЧЕТВЕРГ',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ЧЕТВЕРГ',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',1,'9-00','10-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',1,'9-00','10-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',2,'10-40','12-10','I','5 н Электротехника','пр','Кононов М.А.','110','БББО-02-17'),\n    ('ПЯТНИЦА',2,'10-40','12-10','II','кр.2 н Электротехника','пр','Кононов М.А.','188.2','БББО-02-17'),\n    ('ПЯТНИЦА',3,'13-00','14-30','I','Физическая культура и спорт','пр',NULL,'ФОК','БББО-02-17'),\n    ('ПЯТНИЦА',3,'13-00','14-30','II','Физическая культура и спорт','пр',NULL,'ФОК','БББО-02-17'),\n    ('ПЯТНИЦА',4,'14-40','16-10','I','Документоведение','лек','Сумина С.В.','249','БББО-02-17'),\n    ('ПЯТНИЦА',4,'14-40','16-10','II','Информационные технологии','лек','Володин','441','БББО-02-17'),\n    ('ПЯТНИЦА',5,'16-20','17-50','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('ПЯТНИЦА',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',1,'9-00','10-30','I','1,5,9,13 н Физика','лек','Стерлядкин В.В.','В-78*\nА11','БББО-02-17'),\n    ('СУББОТА',1,'9-00','10-30','II',' Физика','пр','Куликовский К.В.','В-410','БББО-02-17'),\n    ('СУББОТА',2,'10-40','12-10','I','1,5,9,13 н Физика','лек','Стерлядкин В.В.','В-78*\nА11','БББО-02-17'),\n    ('СУББОТА',2,'10-40','12-10','II',' Физика','пр','Куликовский К.В.','В-410','БББО-02-17'),\n    ('СУББОТА',3,'13-00','14-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',3,'13-00','14-30','II','2,6,10,14 н Физика','лр','Куликовский К.В.\nСтерлядкин В.В.','В-78*\nВ-303','БББО-02-17'),\n    ('СУББОТА',4,'14-40','16-10','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',4,'14-40','16-10','II','2,6,10,14 н Физика','лр','Куликовский К.В.\nСтерлядкин В.В.','В-78*\nВ-303','БББО-02-17'),\n    ('СУББОТА',5,'16-20','17-50','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',5,'16-20','17-50','II',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',6,'18-00','19-30','I',NULL,NULL,NULL,NULL,'БББО-02-17'),\n    ('СУББОТА',6,'18-00','19-30','II',NULL,NULL,NULL,NULL,'БББО-02-17');\n",
			"file": "/C/Users/User/Desktop/bbbo02.sql",
			"file_size": 10009,
			"file_write_time": 131866584976742172,
			"settings":
			{
				"buffer_size": 7893,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 170.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"istall",
				"Install Package Control"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"cls",
			"python manage.py runserver ",
			"python manage.py runserver",
			"cls",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.loc_commands(True)",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk"
	],
	"file_history":
	[
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/vk_config.v2.json",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/Procfile",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/runtime.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/.gitignore",
		"/C/Program Files (x86)/Intel/iCLS Client/libeay32.dll",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/db.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/requirements.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/example.py",
		"/C/Users/User/Desktop/НЕ ОТКРЫВАТ!/НЕ ОТКРЫВАТЬ!.html",
		"/C/Users/User/Desktop/НЕ ОТКРЫВАТЬ!.html",
		"/C/Program Files/PostgreSQL/11/data/base/1/1417_vm",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/bbbo02.sql",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/example - копия.py",
		"/C/ProgramData/MySQL/MySQL Server 8.0/my.ini",
		"/E/DEVELOPMENT/Django_projects/MyProjects/bot_vk/bot.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/instruction.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/urls.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/templates/form.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/test_for_job/settings.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/forms.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/templates/Graph/graph_detail.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/parser.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test7.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test6.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test5.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test4.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test2.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/examples/test3.xml",
		"/C/Users/User/Downloads/test.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/live-static/media-root/graph3/test2.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/live-static/media-root/POGNALI/test2.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/live-static/media-root/HELLOOO/test2.xml",
		"/C/Users/User/Downloads/test2.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/live-static/media-root/Margarita/test.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/migrations/0010_auto_20181024_1407.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/migrations/0011_auto_20181024_1409.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/migrations/0009_auto_20181024_1350.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/test.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/live-static/media-root/test3/test.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/Lib/site-packages/django/conf/locale/af/LC_MESSAGES/django.po",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/Lib/site-packages/django/contrib/admin/filters.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/Lib/site-packages/django/contrib/sitemaps/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/Lib/site-packages/django/views/generic/detail.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/admin.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/utils.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/templates/snippets/form-snippet.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/templates/Graph/graph_list.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/templates/homepage.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/templates/Graph/utils.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/templates/base.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/test.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/output.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/output1.xml",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/parser.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/urls.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/test_for_job/urls.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/forms.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/graph/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/src/Graph/migrations/0001_initial.py",
		"/C/MySQL/mysql-8.0.12-winx64/README-test",
		"/E/DEVELOPMENT/Django_projects/MyProjects/test_for_job/test_for_job",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/__init__.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/requirements.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/requirements1.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/bed/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/toys/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/wallets/models.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/bed/migrations/0002_auto_20180611_1408.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/NOTES.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/toys/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/base.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/js/comon.js",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/live-static/static-root/css/main.css",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/Lib/site-packages/django/views/generic/edit.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_media.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_detail-product.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/toys/templates/toys/toy_detail.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/Lib/site-packages/django/contrib/admindocs/views.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/Lib/site-packages/django/views/generic/detail.py",
		"/E/DEVELOPMENT/python_task/education.py.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_titles.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_about.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_list-products.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_profile.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/contact.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/templates/profiles/detail-update.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/registration/register.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/toys/templates/toys/toy_list.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/search/templates/search/search_list.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/about.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/base.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/libs/jquery.bxslider.js",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_general.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_icons.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_contact.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/smart-grid.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_buttons.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/css/main.css",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/live-static/static-root/less/_contact.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/production.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/urls.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/urls.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/templates/profiles/email.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/registration/register_done.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/templates/profiles/erroremail.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/css/email.css",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/errors/templates/errors/error_404.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/templates/registration/password_change_form.html",
		"/E/DEVELOPMENT/тест/email.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/static/less/_email.less",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/utils.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/admin.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/templates/profiles/email.txt",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/profiles/forms.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/bed/templates/bed/bed_list.html",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/credentials.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/aws/conf.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/aws/utils.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/aws/__init__.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/credentials1.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/bed/admin.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/bed/forms.py",
		"/E/DEVELOPMENT/Django_projects/MyProjects/Market_Toys/src/markettoys/settings/local2.py"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 161.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"notification",
			"-Б",
			"Тебя нет в базе!",
			"correct_mes",
			"print",
			"');\n",
			"req",
			"group",
			"print",
			"%s",
			"%S",
			"0",
			"bbbo02",
			"print"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Б",
			"Тебя нет в базе, введи свою группу!\\n Группы, которые поддреживает бот:\\n-БББО-01-17 \\n-БББО-02-17",
			"time_table"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bot.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6005,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								6005
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2414.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "new_bot.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14161,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								14161
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5476.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test_with_excel.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1088,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1088
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										261,
										262
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										235,
										236
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14547,
						"regions":
						{
						},
						"selection":
						[
							[
								13311,
								13308
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5256.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Procfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26,
						"regions":
						{
						},
						"selection":
						[
							[
								26,
								26
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/zzz A File Icon zzz/aliases/YAML (Procfile).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/User/Desktop/bbbo02.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7893,
						"regions":
						{
						},
						"selection":
						[
							[
								331,
								395
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 144.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "bot_vk.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 224.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
